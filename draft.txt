import g_unit_aggr
import numpy as np
#a = np.array([[100,100,100],[0,0,0],[50,50,50]])
a = np.random.rand(10,10)
import time
start = time.time()
g_unit_aggr.g_unit_aggr(a)
end = time.time()
print(end-start)
exit()


import g_unit_aggr
import numpy as np
import time
a = np.random.rand(20,20)
start = time.time()
g_unit_aggr.g_unit_aggr2(a)
end = time.time()
print(end-start)
start = time.time()
g_unit_aggr.g_unit_aggr(a)
end = time.time()
print(end-start)
1



start = time.time()
g_unit_aggr.g_unit_aggr(a, arg_resolution=20)
end = time.time()
print(end-start)



FACTOR_STD = 3.5
arg_resolution = 100
stdDistri = g_unit_aggr.standard_norm_dist(FACTOR_STD, arg_resolution)
b = g_unit_aggr.range_values(11, FACTOR_STD, arg_resolution)
c = g_unit_aggr.range_values(10, FACTOR_STD, arg_resolution)
d = g_unit_aggr.area2distri(b,c,stdDistri)



import g_unit_aggr
import g_oxy
import numpy as np
a = np.array([[1,1,1],[1,1,1],[0.2,0.3,0.5]])
import time
a = np.random.rand(5,5)
aOld = g_unit_aggr.g_unit_aggr2(a)
aNew = np.array(g_oxy.g_unit(a,1.4))
print(aOld);
print(aNew)
a

a = np.random.rand(500,500)
start = time.time()
np.array(g_oxy.g_unit(a,1.4))
end = time.time()
print(end-start)

import time
a = np.random.rand(500,500)
start = time.time()
g_oxy.g_unit(a,3.5)
end = time.time()
print(end-start)


core::slice::iter::Chunks<alloc::vec::Vec<f32>>

[0.24537743, 0.31192764, 0.37847784, 0.44502805, 0.51157826, 0.57812847, 0.64467867, 0.71122888, 0.77777909, 0.8443293]
range_values(0.544853363, 3.5, 10):
    return np.linspace(x-FACTOR_STD,
        x+FACTOR_STD,
        arg_resolution)
		
		
		
		
		use pyo3::prelude::*;
mod g_unit_aggr;

/// Formats the sum of two numbers as string.
#[pyfunction]
fn g_unit(data: Vec<Vec<f32>>, width_distri: f32) -> PyResult<Vec<Vec<f32>>> {
    Ok(g_unit_aggr::g_unit_aggr(data, width_distri))
}

/// A Python module implemented in Rust.
#[pymodule]
fn g_oxy(_py: Python, m: &PyModule) -> PyResult<()> {
    m.add_function(wrap_pyfunction!(g_unit, m)?)?;
    Ok(())
}



import g_oxy
import numpy as np
import time
a = np.random.rand(1000,1000)
start = time.time()
g_oxy.g_unit(a)
end = time.time()
print(end-start)
b = 1
import g_oxy
import numpy as np
import time
a = [[0.34753167, 0.94678175, 0.04270232, 0.85564669, 0.55875796],
       [0.24407165, 0.82189306, 0.77551542, 0.03392919, 0.25139421],
       [0.95829949, 0.7956215 , 0.65509835, 0.32267526, 0.16215933],
       [0.29486054, 0.3976964 , 0.16990447, 0.59248716, 0.46157079],
       [0.41011388, 0.69715868, 0.60462687, 0.07586643, 0.18058594]]


[[1.0, 0.0, 0.0, 0.29635971784591675, 0.00037631989107467234], [0.0, 1.0, 0.40416717529296875, 0.01040040235966444, 0.3929371237754822], [0.0, 0.40416717529296875, 1.0, 0.0643581748008728, 0.47605404257774353], [0.29635971784591675, 0.01040040235966444, 0.0643581748008728, 1.0, 0.0], [0.00037631989107467234, 0.3929371237754822, 0.47605404257774353, 0.0, 1.0]]
[[1.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0, 0.17395184934139252], [0.0, 0.0, 1.0, 0.0, 0.19680893421173096], [0.0, 0.0, 0.0, 1.0, 0.0], [0.0, 0.17395184934139252, 0.19680893421173096, 0.0, 1.0]]


import g_oxy
import numpy as np
import time
a = [[5.0,5.0,5.0,5.0],
	[5.0,5.0,5.0,5.0],
	[10.0,16.0,5.0,8.0],
	[7.5,6.5,5.5,9.0],
	[5.0,5.0,5.0,5.0],
	[-5.0,-5.0,-5.0,-5.0]]
start = time.time()
g_oxy.g_unit(a)
end = time.time()
print(end-start)

import g_oxy
import numpy as np
import time
a = [[5.0,5.0,5.0,5.0],
	[5.0,5.0,5.0,5.0],
	[10.0,16.0,5.0,8.0],
	[7.5,6.5,5.5,9.0]]
start = time.time()
g_oxy.g_unit(a)
end = time.time()
print(end-start)


DATA NORM FLAT
[0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0,
 0.6875, 1.1171875, 0.0, 0.5062500000000001,
 0.45833333333333337, 0.375, 0.09318181818181814, 0.6000000000000001,
 
 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0,
 0.6875, 1.1171875, 0.0, 0.5062500000000001,
 0.45833333333333337, 0.375, 0.09318181818181814, 0.6000000000000001,
 
 0.6875, 1.1171875, 0.0, 0.5062500000000001,
 0.6875, 1.1171875, 0.0, 0.5062500000000001,
 0.0, 0.0, 0.0, 0.0,
 0.22916666666666663, 0.7421875, 0.09318181818181814, 0.09375,
 
 0.45833333333333337, 0.375, 0.09318181818181814, 0.6000000000000001,
 0.45833333333333337, 0.375, 0.09318181818181814, 0.6000000000000001,
 0.22916666666666663, 0.7421875, 0.09318181818181814, 0.09375,
 0.0, 0.0, 0.0, 0.0]
 
 STD VEC
 
[1.971366207030602, 2.9339032168661427, 0.22824790785025056, 1.811098596156488]

[1.000000049075715, 1.000000049075715, 1.000000049075715, 1.000000049075715]
[1.000000049075715, 1.000000049075715, 1.000000049075715, 1.000000049075715]
[0.9641029892580005, 0.994503690897846, 0.7157640967966793, 0.8334497425187711]
[1.000000049075715, 1.000000049075715, 1.000000049075715, 1.000000049075715]
[0.9641029892580005, 0.828715885211088, 0.7157640967966793, 0.9900144583628203]
[1.000000049075715, 1.000000049075715, 1.000000049075715, 1.000000049075715]
[0.9641029892580005, 0.994503690897846, 0.7157640967966793, 0.8334497425187711]
[0.7956920497426772, 0.7361489969515778, 1.000000049075715, 0.9235598255346248]
[1.000000049075715, 1.000000049075715, 1.000000049075715, 1.000000049075715]
[0.9641029892580005, 0.828715885211088, 0.7157640967966793, 0.9900144583628203]
[0.9641029892580005, 0.994503690897846, 0.7157640967966793, 0.8334497425187711]
[1.000000049075715, 1.000000049075715, 1.000000049075715, 1.000000049075715]
[0.7956920497426772, 0.7361489969515778, 1.000000049075715, 0.9235598255346248]
[0.7956920497426772, 0.7361489969515778, 1.000000049075715, 0.9235598255346248]
[0.7956920497426772, 0.7361489969515778, 1.000000049075715, 0.9235598255346248]
[0.9641029892580005, 0.994503690897846, 0.7157640967966793, 0.8334497425187711]
[[1.000000049075715, 1.000000049075715, 0.8638502303261486, 0.8769551298678242], [1.000000049075715, 1.000000049075715, 0.8638502303261486, 0.8769551298678242], [0.8638502303261486, 0.8638502303261486, 1.000000049075715, 0.874649357407147], [0.8769551298678242, 0.8769551298678242, 0.874649357407147, 1.000000049075715]]